package com.ericardo.toDo.controllers;

import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.ericardo.toDo.models.Item;
import com.ericardo.toDo.models.Task;
import com.ericardo.toDo.models.User;
import com.ericardo.toDo.services.ItemService;
import com.ericardo.toDo.services.TaskService;
import com.ericardo.toDo.services.UserService;


@Controller
@RequestMapping("/tasks")
public class TaskController {
	
	@Autowired
	private UserService _uS;
	
	@Autowired
	private TaskService _tS;
	
	@Autowired
	private ItemService _iS;
	
	
	// DASHBOARD ROUTE
	@RequestMapping("")
	public String dashboard(Model _model, HttpSession _session, @ModelAttribute("task") Task task) {
		if(!_uS.isValid(_session)) 
			return _uS.redirect();																
		User user = _uS.find( (Long) _session.getAttribute("id") );
		_model.addAttribute("user", user);
		return "dashboard";
	}
	
	// CREATE A NEW LIST
	@PostMapping("/newTask")
	public String create(@Valid @ModelAttribute("task") Task task ,HttpSession _session, BindingResult _result) {
		if(_session.getAttribute("id") == null) {
			return "redirect:/users/login";
		} else {		
		User user = _uS.find( (Long) _session.getAttribute("id") );
		task.setUser(user);
		_tS.create(task);
		return "redirect:/tasks";
		}
	}
	
	// LIST VIEW
	@RequestMapping("{id}")
	public String showItems(@PathVariable("id") Long id, @ModelAttribute("item") Item item, HttpSession _session, Model _model) {
		if(_session.getAttribute("id") == null) {
			return "redirect:/users/login";
		} else {		
		User user = _uS.find( (Long) _session.getAttribute("id") );
		
		_model.addAttribute("users", user);
		_model.addAttribute("task", _tS.find(id));
		
		return "itemForTask";
		
		
		}
	}
	
	// CREATE A NEW ITEM
	@PostMapping("/{id}/item")
	public String createItem(@PathVariable("id") Long id, @ModelAttribute("item") Item item, BindingResult _result, HttpSession _session) {
		if(_session.getAttribute("id") == null) {
			return "redirect:/users/login";
		} else {	
			
		}
		
		User user = _uS.find( (Long) _session.getAttribute("id") );
		Task task = _tS.find(id);			
		
		if (_result.hasErrors()) {
			System.out.print("ERRORS:   ");
			System.out.print(_result.hasErrors());
			
			return "itemForTask";
		} else {
			
			item.setTask(task);
			item.setUser(user);
			_iS.create(item);
			
			_tS.update(task);
		
		return "redirect:/tasks/{id}";
		}
	}
	
}
